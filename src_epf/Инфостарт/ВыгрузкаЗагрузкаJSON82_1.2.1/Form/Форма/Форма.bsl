
&НаСервере
Процедура ОбъектыВJSONНаСервере()
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ОбъектОбработка.ОбъектыВJSON();
	Объект.ТекстJSON = ОбъектОбработка.ТекстJSON;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыВJSON(Команда)
	ОбъектыВJSONНаСервере();
КонецПроцедуры

&НаСервере
Процедура JSONВОбъектыНаСервере()
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ОбъектОбработка.JSONВОбъекты();
	ЗначениеВРеквизитФормы(ОбъектОбработка,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура JSONВОбъекты(Команда)
	JSONВОбъектыНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПереносимыеОбъектыСсылкаНаОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеТипа(ТипОбъектов)
	МенеджерОбъектов = Вычислить(ТипОбъектов);
	Возврат МенеджерОбъектов.ТипВсеСсылки();
КонецФункции 


&НаКлиенте
Процедура СтраницаРазработкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    ЗапуститьПриложение(СтраницаРазработки);
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Файл данных (*.txt)|*.txt";
	ДиалогВыбораФайла.Расширение = "txt";
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ДиалогВыбораФайла.ПолноеИмяФайла);
		Объект.ТекстJSON = ТекстовыйДокумент.ПолучитьТекст();
		ПоказатьОповещениеПользователя("Данные загружены",,"Выполнена загрузка данных из файла "+ДиалогВыбораФайла.ПолноеИмяФайла);
	КонецЕсли;  
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьВФайл(Команда)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр = "Файл данных (*.txt)|*.txt";
	ДиалогВыбораФайла.Расширение = "txt";
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(Объект.ТекстJSON);
		ТекстовыйДокумент.Записать(ДиалогВыбораФайла.ПолноеИмяФайла);
		ПоказатьОповещениеПользователя("Данные сохранены",,"Выполнено сохранение данных в файл "+ДиалогВыбораФайла.ПолноеИмяФайла);
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзЗапроса(Команда)
	
//	ОткрытьФорму(ИмяФормыКонсолиЗапросов(),,ЭтотОбъект);
	ОткрытьФорму(ИмяФормыКонсолиЗапросов(),,ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ИмяФормыКонсолиЗапросов()
	
	//Если ВариантИспользованияКонсолиЗапросов = 0 Тогда
		
		Обработка = РеквизитФормыВЗначение("Объект");
		ИдентификаторФормы = ".Форма.ВыборИзЗапроса";
		
	//ИначеЕсли ВариантИспользованияКонсолиЗапросов = 1 Тогда
	//	
	//	Обработка = Обработки["КонсольЗапросов"].Создать();
	//	ИдентификаторФормы = ".Форма";
	//	
	//Иначе //ВариантИспользованияКонсолиЗапросов = 2
	//	
	//	Обработка = ВнешниеОбработки.Создать(ПутьКВнешнейКонсолиЗапросов);
	//	ИдентификаторФормы = ".ФормаОбъекта";
	//	
	//КонецЕсли;
	
	Возврат Обработка.Метаданные().ПолноеИмя() + ИдентификаторФормы;
	
КонецФункции



&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранныеЗначения)
	
	Если ТипЗнч(ВыбранныеЗначения) = Тип("Структура") Тогда
		
		РезультатЗапроса = ПолучитьИзВременногоХранилища(ВыбранныеЗначения.ДанныеВыбора);
		
		Если ТипЗнч(РезультатЗапроса)=Тип("Массив") Тогда
			
			РезультатЗапроса = РезультатЗапроса[РезультатЗапроса.ВГраница()];
			
			Если РезультатЗапроса.Колонки.Найти("Ссылка") <> Неопределено Тогда
				ВыбранныеСсылки = РезультатЗапроса.Выгрузить();
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ВыбранныеСсылки = ВыбранныеЗначения;
		
	КонецЕсли;
	
	Для Каждого Значение Из ВыбранныеСсылки Цикл
		
		НоваяСтрока = Объект.ПереносимыеОбъекты.Добавить();
		НоваяСтрока.СсылкаНаОбъект = Значение.Ссылка;
		НоваяСтрока.ТипОбъекта = Строка(ТипЗнч(Значение.Ссылка));
//		НоваяСтрока.ТипОбъекта = ИмяОбъектаПоТипуДляЗапроса(Значение.Ссылка);
		
	КонецЦикла
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяОбъектаПоТипуДляЗапроса(Ссылка)
	
	МетаданныеОбъекта = Ссылка.Метаданные();
	ИмяМетаданных = МетаданныеОбъекта.Имя;
	
	ИмяДляЗапроса = "";
	
	Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "Справочник";
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "Документ";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "ПланВидовХарактеристик";
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "ПланСчетов";
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "ПланВидовРасчета";
	ИначеЕсли Метаданные.ПланыОбмена.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "ПланОбмена";
	ИначеЕсли Метаданные.БизнесПроцессы.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "БизнесПроцесс";
	ИначеЕсли Метаданные.Задачи.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = "Задача";
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяДляЗапроса) Тогда
		Возврат "";
	Иначе
		Возврат ИмяДляЗапроса + "." + ИмяМетаданных;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПереносимыеОбъектыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	

КонецПроцедуры

&НаКлиенте
Процедура ПереносимыеОбъектыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрокаТаблицы = Элементы.ПереносимыеОбъекты.ТекущиеДанные;
	Если ТекущаяСтрокаТаблицы = Неопределено Тогда
	    Возврат;
	КонецЕсли; 
	
	ТекущаяСтрокаТаблицы.ТипОбъекта = Строка(ТипОбъектовДляВыгрузки);
	
	Элементы.ПереносимыеОбъектыСсылкаНаОбъект.ОграничениеТипа = ТипОбъектовДляВыгрузки;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОбъекты(Команда)
	Объект.ПереносимыеОбъекты.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура Инструкция(Команда)
     ЗапуститьПриложение("http://1c.ekaruk.pro/public/308563/");
КонецПроцедуры


