
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИмяАдминистратораОбновления = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	РезультатОбновления = Истина;
	
	ПрочитатьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	ПрименитьНастройки();
	ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки применены'"),, НСтр("ru = 'Переоткройте помощник обновления конфигурации, если он запущен.'"));
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Восстановить настройки по умолчанию?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВосстановитьНастройки();
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки восстановлены'"),,
			НСтр("ru = 'Переоткройте помощник обновления конфигурации, если он запущен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощник(Команда)
	ОбновлениеКонфигурацииКлиент.ПоказатьПоискИУстановкуОбновлений();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьНастройки()
	
	СтруктураНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации", Новый Структура);
	
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "КороткоеИмяКонфигурации", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресСервераДляПроверкиНаличияОбновления", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресРесурсовДляПроверкиНаличияОбновления", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресСервераОбновлений", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресСервисаПроверкиЛегальности", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресКаталогаШаблоновНаСервереОбновлений", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "РежимОтладкиСкрипта", Неопределено, Ложь);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "РежимИмитацииКлиентСервернойИБ", Неопределено, Ложь);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ОбновлениеКонфигурации",
		"НастройкиОбновленияКонфигурации",
		СтруктураНастройки);
	
	ПрочитатьНастройки();

КонецПроцедуры

&НаСервере
Процедура ПрименитьНастройки()

	НастройкиОбновления = ОбновлениеКонфигурации.ПолучитьНастройкиОбновления();
	
	СтруктураНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации", НастройкиОбновления);
	
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "КороткоеИмяКонфигурации", 
		Объект.КороткоеИмяКонфигурации, Объект.ИспользоватьКороткоеИмяКонфигурации);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресСервераДляПроверкиНаличияОбновления", 
		Объект.АдресСервераДляПроверкиНаличияОбновления, Объект.ИспользоватьАдресРесурсаДляПроверкиНаличияОбновления);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресРесурсаДляПроверкиНаличияОбновления", 
		Объект.АдресРесурсаДляПроверкиНаличияОбновления, Объект.ИспользоватьАдресРесурсаДляПроверкиНаличияОбновления);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "КаталогОбновлений", 
		Объект.АдресСервераОбновлений, Объект.ИспользоватьАдресСервераОбновлений);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "АдресСервисаПроверкиЛегальности",
		Объект.АдресСервисаПроверкиЛегальности, Объект.ИспользоватьАдресСервисаПроверкиЛегальности);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "РежимОтладкиСкрипта", РежимОтладкиСкрипта, РежимОтладкиСкрипта);
	ЗаписатьНастройкуПоИмени(СтруктураНастройки, "РежимИмитацииКлиентСервернойИБ", РежимИмитацииКлиентСервернойИБ, РежимИмитацииКлиентСервернойИБ);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации", 
		СтруктураНастройки);
	
	ОбновитьПовторноИспользуемыеЗначения();
	ПрочитатьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройки()
	
	НастройкиОбновления = ОбновлениеКонфигурации.ПолучитьНастройкиОбновления();
	
	СтруктураНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации", НастройкиОбновления);
	
	Объект.ИспользоватьКороткоеИмяКонфигурации = Ложь;
	СтруктураНастройки.Свойство("ИспользоватьЗначениеНастройкиКороткоеИмяКонфигурации", 
		Объект.ИспользоватьКороткоеИмяКонфигурации);
	Объект.КороткоеИмяКонфигурации = НастройкиОбновления.КороткоеИмяКонфигурации;
	Если Объект.ИспользоватьКороткоеИмяКонфигурации Тогда
		СтруктураНастройки.Свойство("КороткоеИмяКонфигурации", Объект.КороткоеИмяКонфигурации);
	КонецЕсли;
	
	Объект.ИспользоватьАдресСервераДляПроверкиНаличияОбновления = Ложь;
	СтруктураНастройки.Свойство("ИспользоватьЗначениеНастройкиАдресСервераДляПроверкиНаличияОбновления", 
		Объект.ИспользоватьАдресСервераДляПроверкиНаличияОбновления);
	Объект.АдресСервераДляПроверкиНаличияОбновления = НастройкиОбновления.АдресСервераДляПроверкиНаличияОбновления;
	Если Объект.ИспользоватьАдресСервераДляПроверкиНаличияОбновления Тогда
		СтруктураНастройки.Свойство("АдресСервераДляПроверкиНаличияОбновления", Объект.АдресСервераДляПроверкиНаличияОбновления);
	КонецЕсли;
	
	Объект.ИспользоватьАдресРесурсаДляПроверкиНаличияОбновления = Ложь;
	СтруктураНастройки.Свойство("ИспользоватьЗначениеНастройкиАдресРесурсаДляПроверкиНаличияОбновления", 
		Объект.ИспользоватьАдресРесурсаДляПроверкиНаличияОбновления);
	Объект.АдресРесурсаДляПроверкиНаличияОбновления = НастройкиОбновления.АдресРесурсаДляПроверкиНаличияОбновления;
	Если Объект.ИспользоватьАдресРесурсаДляПроверкиНаличияОбновления Тогда
		СтруктураНастройки.Свойство("АдресРесурсаДляПроверкиНаличияОбновления", Объект.АдресРесурсаДляПроверкиНаличияОбновления);
	КонецЕсли;
	
	Объект.ИспользоватьАдресСервераОбновлений = Ложь;
	СтруктураНастройки.Свойство("ИспользоватьЗначениеНастройкиКаталогОбновлений",
		Объект.ИспользоватьАдресСервераОбновлений);
	Объект.АдресСервераОбновлений = НастройкиОбновления.КаталогОбновлений;
	Если Объект.ИспользоватьАдресСервераОбновлений Тогда
		СтруктураНастройки.Свойство("КаталогОбновлений", Объект.АдресСервераОбновлений);
	КонецЕсли;
	
	Объект.ИспользоватьАдресСервисаПроверкиЛегальности = Ложь;
	СтруктураНастройки.Свойство("ИспользоватьЗначениеНастройкиАдресСервисаПроверкиЛегальности",
		Объект.ИспользоватьАдресСервисаПроверкиЛегальности);
	Объект.АдресСервисаПроверкиЛегальности = НастройкиОбновления.АдресСервисаПроверкиЛегальности;
	Если Объект.ИспользоватьАдресСервисаПроверкиЛегальности Тогда
		СтруктураНастройки.Свойство("АдресСервисаПроверкиЛегальности", Объект.АдресСервисаПроверкиЛегальности);
	КонецЕсли;
	
	РежимОтладкиСкрипта = Ложь;
	Если НЕ СтруктураНастройки.Свойство("РежимОтладкиСкрипта", РежимОтладкиСкрипта) Тогда
		РежимОтладкиСкрипта = Ложь;
	КонецЕсли;
	
	РежимИмитацииКлиентСервернойИБ = Ложь;
	Если НЕ СтруктураНастройки.Свойство("РежимИмитацииКлиентСервернойИБ", РежимИмитацииКлиентСервернойИБ) Тогда
		РежимИмитацииКлиентСервернойИБ = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкуПоИмени(СтруктураНастройки, Знач ИмяНастройки, Знач Значение, Знач Использовать)

	Если СтруктураНастройки = Неопределено Тогда 
		СтруктураНастройки = Новый Структура();
	КонецЕсли;	
	СтруктураНастройки.Вставить("ИспользоватьЗначениеНастройки" + ИмяНастройки, Использовать);
	Если Использовать Тогда
		СтруктураНастройки.Вставить(ИмяНастройки, Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбновление(Команда)
	
	ЗавершитьОбновлениеНаСервере();
	ОбновлениеКонфигурацииКлиент.ПоказатьПоискИУстановкуОбновлений();
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьОбновлениеНаСервере()
	
	ОбновлениеКонфигурации.ЗавершитьОбновление(РезультатОбновления, АдресЭлектроннойПочты, ИмяАдминистратораОбновления);
	
КонецПроцедуры

#КонецОбласти
