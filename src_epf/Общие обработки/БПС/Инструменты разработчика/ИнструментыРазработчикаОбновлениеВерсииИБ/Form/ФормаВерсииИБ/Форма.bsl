
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НаборЗаписейВерсии = РегистрыСведений.ВерсииПодсистем.СоздатьНаборЗаписей();
	НаборЗаписейВерсии.Прочитать();
	ЗначениеВРеквизитФормы(НаборЗаписейВерсии, "Версии");
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		
		Элементы.КомандыСписка.Видимость = Ложь;
		
		НаборЗаписейВерсииОбластей = РегистрыСведений.ВерсииПодсистемОбластейДанных.СоздатьНаборЗаписей();
		НаборЗаписейВерсииОбластей.Прочитать();
		ЗначениеВРеквизитФормы(НаборЗаписейВерсииОбластей, "ВерсииОбластей");
		
		Если НЕ ОбщегоНазначенияПовтИсп.СеансЗапущенБезРазделителей() Тогда
			Элементы.Версии.ТолькоПросмотр = Истина;
		КонецЕсли;
	Иначе
		Элементы.ВерсииПодсистем.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Версии.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	КонецЕсли;
	
	ИмитироватьОшибкуПриОбновлении = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеИБ", "ИмитироватьОшибкуПриОбновлении", Ложь);
	МонопольноеОбновление = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеИБ", "ВыполнятьМонопольноеОбновление", Ложь);
	
	ПутьКФормам = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя() + ".Форма";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрНайти(ПараметрЗапуска, "ЗапуститьОбновлениеИнформационнойБазы") > 0 Тогда
		ЗапуститьОбновлениеИнформационнойБазы = Истина;
		Элементы.ЗапуститьОбновлениеИнформационнойБазы.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВерсии

&НаКлиенте
Процедура ВерсииПриИзменении(Элемент)
	
	ВерсииОбщихДанныхИзменены = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВерсииОбластей

&НаКлиенте
Процедура ВерсииОбластейПриИзменении(Элемент)
	
	ВерсииОбластейДанныхИзменены = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьВсе(Команда)
	
	ЗаписатьВсеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезапуститьПрограмму(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПерезапуститьПрограммуЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Перезапустить программу?'"), РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ЗаписатьВсеНаСервере();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВсеНаСервере()
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ИмяПодсистемы", Метаданные.Имя);
	
	ВерсияКонфигурации = Неопределено;
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		
		Если ОбщегоНазначенияПовтИсп.СеансЗапущенБезРазделителей()
		   И ВерсииОбщихДанныхИзменены Тогда
			
			ВерсияКонфигурации = Версии.НайтиСтроки(Отбор);
			РеквизитФормыВЗначение("Версии").Записать();
		КонецЕсли;
		
		Если ВерсииОбластейДанныхИзменены Тогда
			ВерсияКонфигурации = ВерсииОбластей.НайтиСтроки(Отбор);
			РеквизитФормыВЗначение("ВерсииОбластей").Записать();
		КонецЕсли;
	Иначе
		Если ВерсииОбщихДанныхИзменены Тогда
			ВерсияКонфигурации = Версии.НайтиСтроки(Отбор);
			РеквизитФормыВЗначение("Версии").Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ВерсияКонфигурации <> Неопределено
		И ВерсияКонфигурации.Количество() <> 0 Тогда
		Версия = ВерсияКонфигурации[0].Версия;
		Отбор = Новый Структура;
		Отбор.Вставить("КлючОбъекта", "ОбновлениеИБ");
		Отбор.Вставить("КлючНастроек", "ПоследняяВерсияОтображенияИзмененийСистемы");
		
		Выборка = ХранилищеОбщихНастроек.Выбрать(Отбор);
		
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбновлениеИБ",
				"ПоследняяВерсияОтображенияИзмененийСистемы", Версия, , Выборка.Пользователь);
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбновлениеИБ",
		"ВыполнятьМонопольноеОбновление", МонопольноеОбновление);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбновлениеИБ",
		"ИмитироватьОшибкуПриОбновлении", ИмитироватьОшибкуПриОбновлении);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбновлениеИБ",
		"ИмитироватьОшибкуПриОтложенномОбновлении", ИмитироватьОшибкуПриОтложенномОбновлении);
		
	Если ВерсииОбщихДанныхИзменены Тогда
		СведенияОбОбновлении = ОбновлениеИнформационнойБазыСлужебный.СведенияОбОбновленииИнформационнойБазы();
		СведенияОбОбновлении.ЛегальнаяВерсия = "";
		ОбновлениеИнформационнойБазыСлужебный.ЗаписатьСведенияОбОбновленииИнформационнойБазы(СведенияОбОбновлении);
	КонецЕсли;
	
	Модифицированность           = Ложь;
	ВерсииОбщихДанныхИзменены    = Ложь;
	ВерсииОбластейДанныхИзменены = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезапуститьПрограммуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	НовыйПараметрЗапуска = СтрЗаменить(ПараметрЗапуска, """", """""");
	
	Если НЕ ЗапуститьОбновлениеИнформационнойБазы
	 ИЛИ СтрНайти(ПараметрЗапуска, "ЗапуститьОбновлениеИнформационнойБазы") > 0 Тогда
		
		ДополнительныеПараметрыКоманднойСтроки = "/C """ + НовыйПараметрЗапуска + """";
	Иначе
		ДополнительныеПараметрыКоманднойСтроки = "/C """ + НовыйПараметрЗапуска
			+ ?(Прав(ПараметрЗапуска, 1) = ";", "", ";") + "ЗапуститьОбновлениеИнформационнойБазы""";
	КонецЕсли;
	
	ЗавершитьРаботуСистемы(Истина, Истина, ДополнительныеПараметрыКоманднойСтроки);
	
КонецПроцедуры

#КонецОбласти
