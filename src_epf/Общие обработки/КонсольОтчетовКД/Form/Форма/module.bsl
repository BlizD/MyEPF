Перем ИмяФайлаОтчетов;
Перем ИмяПути;
Перем ЗаголовокФормы;
Перем ТекущаяСтрока;
Перем ИдетДобавление;
Перем История;
Перем ИсторияВперед;
Перем ОтчетыВКнопке;
Перем НастройкиОтчетаВКнопке;
Перем НомерТекущегоОтчета;
Перем ПоследняяОткрытаяНастройка;
Перем НастройкиВКнопке;
Перем ОтработанаРасшифровка;
Перем ПоследнийВыданныйОтчет;
Перем ПозицияЛево;
Перем ПозицияВерх;
Перем ПозицияПраво;
Перем ПозицияНиз;
Перем ОтчетНастройкиВКнопке;
Перем КонструкторСхемы;
Перем РедактируемаяКонструкторомСтрока;
Перем ДанныеРасшифровкиКонсоли;
Перем ФормаВыбораСтрокиДереваОтчетов;
Перем ВыводитьТекстЗапроса;
Перем ВыводитьВремяВыполнения;

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьСхемуКомпоновкиДанных()
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Возврат ТекущаяСтрока.СхемаКомпоновкиДанных;
		
	Иначе 
		
		Возврат Неопределено;
		
	КонецЕсли
	
КонецФункции

Процедура УстановитьЗаголовокФормы()
	Если ИмяФайлаОтчетов <> "" Тогда
		Заголовок = ЗаголовокФормы + " : " + ИмяФайлаОтчетов;
	Иначе
		Заголовок = ЗаголовокФормы;
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьЗначения()

	ДеревоОтчетов.Строки.Очистить();

КонецПроцедуры

Процедура СохранитьИмяФайла()

	СохранитьЗначение("КонсольОтчетов2_ИмяФайла", ИмяФайлаОтчетов);
	СохранитьЗначение("КонсольОтчетов2_ИмяПути",  ИмяПути);

КонецПроцедуры

Процедура СохранитьТекущийЗапрос()
	
	ПоследнийЗапрос = ПолучитьПутьСтроки(ТекущаяСтрока);
	СохранитьЗначение("КонсольОтчетов2_ПоследнийОтчет", ПоследнийЗапрос);
	
КонецПроцедуры

Процедура ВосстановитьТекущийЗапрос()
	
	ПоследнийЗапрос = ВосстановитьЗначение("КонсольОтчетов2_ПоследнийОтчет");

	ТекущаяСтрокаДерева = НайтиСтрокуПоПути(ПоследнийЗапрос);
	
	Если ТекущаяСтрокаДерева <> Неопределено Тогда
		
		ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = ТекущаяСтрокаДерева;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВосстановитьИмяФайла()

	ИмяФайлаОтчетов = ВосстановитьЗначение("КонсольОтчетов2_ИмяФайла");
	ИмяПути  = ВосстановитьЗначение("КонсольОтчетов2_ИмяПути");

	Если ИмяФайлаОтчетов = НеОпределено Тогда
		ИмяФайлаОтчетов = "";
	КонецЕсли;

	Если ИмяПути = НеОпределено Тогда
		ИмяПути = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьНовыйФайлЗапросов()

	ИмяФайлаОтчетов = "";
	ИмяПути = "";
	СохранитьИмяФайла();

	ОчиститьЗначения();
	УстановитьЗаголовокФормы();
	ТекущаяСтрока = НеОпределено;

	ГлавнаяСтрока = ДеревоОтчетов.Строки.Добавить();
	ГлавнаяСтрока.ИмяОтчета = "Отчеты";
	ГлавнаяСтрока.СохранятьНастройкиАвтоматически = Ложь;
	ПоследняяОткрытаяНастройка = Неопределено;

	Модифицированность = Ложь;
	
	ЗагрузитьОтчетыВМеню();
	ОчиститьРезультаты();
	История.Очистить();
	ИсторияВперед.Очистить();
	ОбновитьКнопкиИстории();
	
КонецПроцедуры

Процедура ИнициализироватьТаблицу(Таблица)
	
	Если Таблица.Колонки.Найти("ИмяОтчета") = Неопределено Тогда
		Таблица.Колонки.Добавить("ИмяОтчета");
	КонецЕсли;
	
	Если Таблица.Колонки.Найти("СхемаКомпоновкиДанных") = Неопределено Тогда
		Таблица.Колонки.Добавить("СхемаКомпоновкиДанных");
	КонецЕсли;
	
	Если Таблица.Колонки.Найти("Настройки") = Неопределено Тогда
		Таблица.Колонки.Добавить("Настройки");
	КонецЕсли;
	
	Если Таблица.Колонки.Найти("НастройкаДляЗагрузки") = Неопределено Тогда
		Таблица.Колонки.Добавить("НастройкаДляЗагрузки");
	КонецЕсли;
	
	Если Таблица.Колонки.Найти("СохранятьНастройкиАвтоматически") = Неопределено Тогда
		Таблица.Колонки.Добавить("СохранятьНастройкиАвтоматически");
	КонецЕсли;
	
КонецПроцедуры

Функция ЗагрузитьЗапросыИзФайла(ПриЗапуске)
	
	Попытка
		
		ПолученноеЗначение = ЗначениеИзФайла(ИмяФайлаОтчетов);
		
		Если ТипЗнч(ПолученноеЗначение) = Тип("ДеревоЗначений") Тогда

			ИнициализироватьТаблицу(ПолученноеЗначение);

			ДеревоОтчетов = ПолученноеЗначение;
	
			Модифицированность = Ложь;
			
			УстановитьЗаголовокФормы();
			ЗагрузитьОтчетыВМеню();

		Иначе // Формат файла не опознан
			
			Если НЕ ПриЗапуске Тогда
				Предупреждение(НСтр("ru='Невозможно загрузить список отчетов из указанного файла!
							   |Выберите другой файл.'"));
			КонецЕсли;
						   
		   	Возврат Ложь;
			
		КонецЕсли;

	Исключение
		
		Если НЕ ПриЗапуске Тогда
			
			Предупреждение(НСтр("ru='Невозможно загрузить список отчетов из указанного файла!
						   |Выберите другой файл.'"));

		КонецЕсли;
					   
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция СохранитьЗапросыВФайл(ЗапрашиватьСохранение = Ложь, ЗапрашиватьИмяФайла = Ложь)

	Если ТекущаяСтрока <> Неопределено Тогда
		
		СохранитьТекущиеНастройкиВСтроку();
		
	КонецЕсли;

	Если Не ЗапрашиватьИмяФайла Тогда
		
		Если ЗапрашиватьСохранение Тогда
			
			Если Не Модифицированность Тогда
				
				Возврат Истина;
				
			Иначе
				
				Ответ = Вопрос(НСтр("ru='Сохранить текущие отчеты?'"), РежимДиалогаВопрос.ДаНетОтмена);
				
				Если Ответ = КодВозвратаДиалога.Отмена Тогда
					
					Возврат Ложь;
					
				ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
					
					Возврат Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

	Если ПустаяСтрока(ИмяФайлаОтчетов) или ЗапрашиватьИмяФайла Тогда

		Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);

		Длг.ПолноеИмяФайла = ИмяФайлаОтчетов;
		Длг.Каталог = ИмяПути;
		Длг.Заголовок = НСтр("ru='Укажите файл для списка отчетов'");
		Длг.Фильтр = "Файлы отчетов (*.dcf)|*.dcf|Все файлы (*.*)|*.*";
		Длг.Расширение = "dcf";
		
		Если Длг.Выбрать() Тогда
			
			ИмяФайлаОтчетов = Длг.ПолноеИмяФайла;
			ИмяПути = Длг.Каталог;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;

	КонецЕсли;

	Если НЕ ЗначениеВФайл(ИмяФайлаОтчетов, ДеревоОтчетов) Тогда
		
		Предупреждение(НСтр("ru='Невозможно сохранить файл'"));
		Возврат Ложь;
		
	КонецЕсли;

	Модифицированность = Ложь;
	СохранитьИмяФайла();
	УстановитьЗаголовокФормы();

	Возврат Истина;

КонецФункции

Процедура ОбработчикИзмененияДанных(ИмяДанных)

	Модифицированность = Истина;

КонецПроцедуры

Процедура ЗагрузитьНастройки(СтрокаНастроек)
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СтрокаНастроек.Настройки.Получить());

КонецПроцедуры

Процедура ИнициализироватьИсточникКомпоновщикаНастроек(Строка)
	
	Если Строка.СхемаКомпоновкиДанных <> Неопределено Тогда
		
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Строка.СхемаКомпоновкиДанных));
		
	Иначе
		
		КомпоновщикНастроек.Инициализировать(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьКомпоновщикНастроек(Строка)
	
	Перем НастройкиЗагружены;
	НастройкиЗагружены = Ложь;
	
	ИнициализироватьИсточникКомпоновщикаНастроек(Строка);

	Если Строка.Настройки <> Неопределено Тогда
		
		Если Строка.НастройкаДляЗагрузки <> Неопределено Тогда
			
			Для Каждого Тн ИЗ Строка.Настройки Цикл
				
				Если Тн.Имя = Строка.НастройкаДляЗагрузки Тогда
					
					ПоследняяОткрытаяНастройка = Строка.НастройкаДляЗагрузки;
					НастройкиПостроителяЗагружены = Истина;
					ЗагрузитьНастройки(Тн);
					НастройкиЗагружены = Истина;
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			Если Строка.Настройки.Количество() > 0 Тогда
				
				ЗагрузитьНастройки(Строка.НастройкиПостроителя[0]);
				НастройкиЗагружены = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не НастройкиЗагружены Тогда
		
		Если Строка.СхемаКомпоновкиДанных <> Неопределено Тогда
			
			КомпоновщикНастроек.ЗагрузитьНастройки(Строка.СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
			
		Иначе
			
			КомпоновщикНастроек.ЗагрузитьНастройки(Новый НастройкиКомпоновкиДанных());
			
		КонецЕсли;
		
	КонецЕсли;
	
	КомпоновщикНастроек.Восстановить();
	
КонецПроцедуры

Процедура СохранитьПозициюВРезультате()
	
	Область = ЭлементыФормы.РезультатТабДок.ТекущаяОбласть;
	ПозицияЛево = Область.Лево;
	ПозицияВерх = Область.Верх;
	ПозицияПраво = Область.Право;
	ПозицияНиз = Область.Низ;

КонецПроцедуры

Процедура ЗаписатьИсторию()
	
	ЗаписьВИстории = Новый Структура;
	ЗаписьВИстории.Вставить("Настройки", Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки));
	ЗаписьВИстории.Вставить("Отчет", ТекущаяСтрока);
	ЗаписьВИстории.Вставить("ПозицияЛево", ПозицияЛево);
	ЗаписьВИстории.Вставить("ПозицияВерх", ПозицияВерх);
	ЗаписьВИстории.Вставить("ПозицияПраво", ПозицияПраво);
	ЗаписьВИстории.Вставить("ПозицияНиз", ПозицияНиз);
	История.Добавить(ЗаписьВИстории);
	ИсторияВперед.Очистить();
	
КонецПроцедуры

Процедура ОбновитьКнопкиИстории()
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Назад.Доступность = (История.Количество() > 1);
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Вперед.Доступность = (ИсторияВперед.Количество() > 0);
	
КонецПроцедуры

Функция ВыполнитьОтчет()
	
	СхемаКомпоновкиДанныхКонсоли = ПолучитьСхемуКомпоновкиДанных();
	
	Если СхемаКомпоновкиДанныхКонсоли = Неопределено Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ЭлементыФормы.РезультатТабДок.Очистить();
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Копия.Доступность = Истина;
	
	ИсполняемыеНастройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанныхКонсоли, ИсполняемыеНастройки, ДанныеРасшифровкиКонсоли);
	
	ВремяНачала = ТекущееВремяТ();
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,, ДанныеРасшифровкиКонсоли);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.РезультатТабДок);
	ПроцессорВывода.НачатьВывод();
	
	Пока Истина Цикл
		
		ЭлементРезультатаКомпоновкиДанных = ПроцессорКомпоновкиДанных.Следующий();
		
		Если ЭлементРезультатаКомпоновкиДанных = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультатаКомпоновкиДанных);
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
	Если ВыводитьВремяВыполнения Тогда
		
		Разность = ТекущееВремяТ() - ВремяНачала;
		ЧислоСекунд = Цел(Разность/1000);
        Разность = Разность - ЧислоСекунд*1000;
		
		Если ВыводитьТекстЗапроса Тогда
			
			//ОбластьВремяЗапроса.Параметры.Параметр="Время выполнения (с): " + ЧислоСекунд + "." + Разность;
			//ТабДок.Вывести(ОбластьВремяЗапроса);
			
		Иначе
			
			Сообщить("Время выполнения (с): " + ЧислоСекунд + "." + Разность, СтатусСообщения.Информация);
		КонецЕсли;

	КонецЕсли; 
	
	Если ВыводитьТекстЗапроса Тогда
	
		ЭлементыФормы.ЗапросТабДок.Очистить();
		ТабДок=ЭлементыФормы.ЗапросТабДок;
		Макет = ЭтотОбъект.ПолучитьМакет("Запрос");
		ОбластьИмяСхемы = Макет.ПолучитьОбласть("ИмяСхемы");
		ОбластьПараметры = Макет.ПолучитьОбласть("Параметры");
		ОбластьОтбор = Макет.ПолучитьОбласть("Отбор");
		ОбластьВложеннаяСхема = Макет.ПолучитьОбласть("ВложеннаяСхема");
		ОбластьИмяНабора = Макет.ПолучитьОбласть("ИмяНабора");
		ОбластьТекстЗапроса = Макет.ПолучитьОбласть("ТекстЗапроса");
		ОбластьВремяЗапроса = Макет.ПолучитьОбласть("ВремяЗапроса");
		
		
		ОбластьИмяСхемы.Параметры.Параметр=ТекущаяСтрока.ИмяОтчета;
		ТабДок.Вывести(ОбластьИмяСхемы);
		
		Параметры="";
		Для каждого Элемент Из ИсполняемыеНастройки.ПараметрыДанных.Элементы Цикл
			
			Если Элемент.Использование Тогда
			
				Параметры = Параметры + Элемент.Параметр + " = "+Элемент.Значение+Символы.ПС;
			
			КонецЕсли; 
		
		КонецЦикла; 
		ОбластьПараметры.Параметры.Параметр=Параметры;
		ТабДок.Вывести(ОбластьПараметры);
		
		ОбластьОтбор.Параметры.Параметр=ИсполняемыеНастройки.Отбор;
		ТабДок.Вывести(ОбластьОтбор);
		
		Если ВыводитьВремяВыполнения Тогда
			ОбластьВремяЗапроса.Параметры.Параметр="Время выполнения (с): " + ЧислоСекунд + "." + Разность;
			ТабДок.Вывести(ОбластьВремяЗапроса);
		КонецЕсли;
		
		Если МакетКомпоновкиДанных.НаборыДанных.Количество() <> 0 Тогда
		
			ТабДок.НачатьАвтогруппировкуСтрок();
			НаборыДанных=МакетКомпоновкиДанных.НаборыДанных;
			Для Сч = 0 по НаборыДанных.Количество()-1 Цикл
				Если ТипЗнч(НаборыДанных[Сч])=Тип("НаборДанныхОбъединениеМакетаКомпоновкиДанных") Тогда
					
					Для Сч2=0 По НаборыДанных[Сч].Элементы.Количество()-1 Цикл
						
						Если НаборыДанных[Сч].Элементы.Количество() <> 1 Тогда
						
							ОбластьИмяНабора.Параметры.Параметр = НаборыДанных[Сч].Элементы[Сч2].Имя;
							ТабДок.Вывести(ОбластьИмяНабора,1);
						
						КонецЕсли; 
						
						ОбластьТекстЗапроса.Параметры.Параметр = НаборыДанных[Сч].Элементы[Сч2].Запрос;
						ТабДок.Вывести(ОбластьТекстЗапроса,2);
						
					КонецЦикла; 
					
				Иначе
					
					Если НаборыДанных.Количество()<>1 Тогда
					
						ОбластьИмяНабора.Параметры.Параметр = НаборыДанных[Сч].Имя;
						ТабДок.Вывести(ОбластьИмяНабора,1);
					
					КонецЕсли; 
					
					ОбластьТекстЗапроса.Параметры.Параметр = НаборыДанных[Сч].Запрос;
					ТабДок.Вывести(ОбластьТекстЗапроса,2);
					
				КонецЕсли; 
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
		Иначе
		
			Если СхемаКомпоновкиДанныхКонсоли.ВложенныеСхемыКомпоновкиДанных.Количество() <> 0 Тогда
				
				ТабДок.НачатьАвтогруппировкуСтрок();
				Для Сч3=0 По СхемаКомпоновкиДанныхКонсоли.ВложенныеСхемыКомпоновкиДанных.Количество()-1 Цикл
					
					ОбластьВложеннаяСхема.Параметры.Параметр=СхемаКомпоновкиДанныхКонсоли.ВложенныеСхемыКомпоновкиДанных[Сч3].Имя;
					ТабДок.Вывести(ОбластьВложеннаяСхема,1);
					НаборыДанных=СхемаКомпоновкиДанныхКонсоли.ВложенныеСхемыКомпоновкиДанных[Сч3].Схема.НаборыДанных;
					
					Для Сч = 0 по НаборыДанных.Количество()-1 Цикл
						Если ТипЗнч(НаборыДанных[Сч])=Тип("НаборДанныхОбъединениеМакетаКомпоновкиДанных") Тогда
							
							Для Сч2=0 По НаборыДанных[Сч].Элементы.Количество()-1 Цикл
								
								Если НаборыДанных[Сч].Элементы.Количество() <> 1 Тогда
								
									ОбластьИмяНабора.Параметры.Параметр = НаборыДанных[Сч].Элементы[Сч2].Имя;
									ТабДок.Вывести(ОбластьИмяНабора,2);
								
								КонецЕсли; 
								
								ОбластьТекстЗапроса.Параметры.Параметр = НаборыДанных[Сч].Элементы[Сч2].Запрос;
								ТабДок.Вывести(ОбластьТекстЗапроса,3);
								
							КонецЦикла; 
							
						Иначе
							
							Если НаборыДанных.Количество()<>1 Тогда
							
								ОбластьИмяНабора.Параметры.Параметр = НаборыДанных[Сч].Имя;
								ТабДок.Вывести(ОбластьИмяНабора,2);
							
							КонецЕсли; 
							
							ОбластьТекстЗапроса.Параметры.Параметр = НаборыДанных[Сч].Запрос;
							ТабДок.Вывести(ОбластьТекстЗапроса,3);
							
						КонецЕсли; 
					КонецЦикла;
					
				КонецЦикла;
				
				ТабДок.ЗакончитьАвтогруппировкуСтрок();
			
			КонецЕсли; 
		
		КонецЕсли; 
	
	КонецЕсли; 
	
	Возврат Истина;

КонецФункции

Процедура СвернутьНастройки()
	
	Если ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтображатьНастройки.Пометка Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтображатьНастройки.Пометка = Ложь;
		
		ЭлементыФормы.ПанельВсехНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ);
		ЭлементыФормы.РазделительГоризонтальныйПодНастройками.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.ПанельВсехНастроек, ГраницаЭлементаУправления.Низ);
		ЭлементыФормы.ПанельВсехНастроек.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.РазделительГоризонтальныйПодНастройками.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьНастройки()
	
	Если НЕ ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтображатьНастройки.Пометка Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтображатьНастройки.Пометка = Истина;

		ЭлементыФормы.РазделительГоризонтальныйПодНастройками.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельВсехНастроек.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.РазделительГоризонтальныйПодНастройками.УстановитьПривязку(ГраницаЭлементаУправления.Верх);
		ЭлементыФормы.РазделительГоризонтальныйПодНастройками.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.РазделительГоризонтальныйПодНастройками, ГраницаЭлементаУправления.Верх);
		ЭлементыФормы.ПанельВсехНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.РазделительГоризонтальныйПодНастройками, ГраницаЭлементаУправления.Верх);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьОтчетыВМеню(Строка = Неопределено, Кнопка = Неопределено)
	
	Перем Строки;
	Перем Кнопки;
	
	Если Строка = Неопределено Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отчет.Кнопки.Очистить();
		Строки = ДеревоОтчетов.Строки;
		Если Строки.Количество() = 1 И Строки[0].Строки.Количество() > 0 Тогда
			Строки = Строки[0].Строки;
		КонецЕсли;
			
		Кнопки = ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отчет.Кнопки;
		ОтчетыВКнопке = Новый Соответствие;
		НастройкиОтчетаВКнопке = Новый Соответствие;
		ОтчетНастройкиВКнопке = Новый Соответствие;
		НомерТекущегоОтчета = 0;
	Иначе 
		Строки = Строка.Строки;
		Кнопки = Кнопка.Кнопки;
	КонецЕсли;
	
	Для Каждого ТС Из Строки Цикл

		НомерТекущегоОтчета = НомерТекущегоОтчета + 1;
		ИмяКнопкиОтчета = "К" + Строка(НомерТекущегоОтчета);
		ОтчетыВКнопке[ИмяКнопкиОтчета] = ПолучитьПутьСтроки(ТС);
		
		КнопкиПодменю = Кнопки;
		Если ТС.Строки.Количество() > 0 Тогда
			// Подменю
			НоваяКнопкаПодменю = Кнопки.Добавить(ИмяКнопкиОтчета,ТипКнопкиКоманднойПанели.Подменю, ТС.ИмяОтчета, );
			КнопкиПодменю = НоваяКнопкаПодменю.Кнопки;
		КонецЕсли;
		
		Если ТС.СхемаКомпоновкиДанных <> Неопределено Тогда
			Если ТипЗнч(ТС.Настройки) = Тип("ТаблицаЗначений") И 
				ТС.Настройки.Количество() > 1 Тогда
				НоваяКнопкаОтчета = КнопкиПодменю.Добавить(ИмяКнопкиОтчета,ТипКнопкиКоманднойПанели.Подменю, ТС.ИмяОтчета, );
				
				НомерНастройки = 0;
				
				Для Каждого ТН Из ТС.Настройки Цикл
					НомерНастройки = НомерНастройки + 1;
					ИмяКнопки = "К" + Строка(НомерТекущегоОтчета) + "_" + Строка(НомерНастройки);
					ОтчетНастройкиВКнопке[ИмяКнопки] = ПолучитьПутьСтроки(ТС);
					НастройкиОтчетаВКнопке[ИмяКнопки] = ТН.Имя;
					Действие = Новый Действие("ВыполнитьОтчетИзМеню");
					НоваяКнопка = НоваяКнопкаОтчета.Кнопки.Добавить(ИмяКнопки, ТипКнопкиКоманднойПанели.Действие, ТН.Имя, Действие);
					
					Если ПоследняяОткрытаяНастройка = ТН.Имя И ТекущаяСтрока = ТС Тогда
						НоваяКнопка.Пометка = Истина;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Действие = Новый Действие("ВыполнитьОтчетИзМеню");
				НоваяКнопка = КнопкиПодменю.Добавить(ИмяКнопкиОтчета, ТипКнопкиКоманднойПанели.Действие, ТС.ИмяОтчета, Действие);
				Если ТС = ТекущаяСтрока Тогда 
					НоваяКнопка.Пометка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ТС.Строки.Количество() > 0 Тогда
			// Подменю
			ЗагрузитьОтчетыВМеню(ТС, НоваяКнопкаПодменю)
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗагрузитьНастройкиОтчетаВМеню()
	
    Перем НомерНастройки;
	Перем Кнопки;

	Кнопки = ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ЗагрузитьНастройкиОтчета.Кнопки;
	
	Кнопки.Очистить();
	
	НастройкиВКнопке = Новый Соответствие;
	
	НомерНастройки = 0;
	
	Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.СхемаКомпоновкиДанных <> Неопределено Тогда 
		
		НастройкиВКнопке[Строка(НомерНастройки)] = "";   
		ИмяКнопки = "К" + Строка(НомерНастройки);
		Действие = Новый Действие("ЗагрузитьНастройкиОтчета");
		НоваяКнопка = Кнопки.Добавить(ИмяКнопки, ТипКнопкиКоманднойПанели.Действие, НСтр("ru='Настройки по умолчанию'"), Действие);
		
	КонецЕсли;
	
	Если ТекущаяСтрока <> Неопределено И ТипЗнч(ТекущаяСтрока.Настройки) = Тип("ТаблицаЗначений") Тогда
		
		Для Каждого ТН Из ТекущаяСтрока.Настройки Цикл
			
			НомерНастройки = НомерНастройки + 1;
			НастройкиВКнопке[Строка(НомерНастройки)] = ТН.Имя;
			ИмяКнопки = "К" + Строка(НомерНастройки);
			Действие = Новый Действие("ЗагрузитьНастройкиОтчета");
			НоваяКнопка = Кнопки.Добавить(ИмяКнопки, ТипКнопкиКоманднойПанели.Действие, ТН.Имя, Действие);
			
			Если ПоследняяОткрытаяНастройка = ТН.Имя Тогда
				
				НоваяКнопка.Пометка = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьТекущуюСтрокуВМеню(Кнопки)
	
	Для Каждого Кнопка Из Кнопки Цикл
		Кнопка.Пометка = Ложь;
		Если Кнопка.Кнопки <> Неопределено Тогда
			ОчиститьТекущуюСтрокуВМеню(Кнопка.Кнопки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ОтметитьТекущуюСтрокуВМеню(Строка = Неопределено, Кнопка = Неопределено)
	
	Перем Кнопки;
	
	Если Строка = Неопределено Тогда
		Кнопки = ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отчет.Кнопки;
		ОчиститьТекущуюСтрокуВМеню(Кнопки);
		Строка = ПолучитьПутьСтроки(ТекущаяСтрока);
		Если Строка = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Кнопки = Кнопка.Кнопки;
	КонецЕсли;
	
	Если Кнопки <> Неопределено Тогда
		Для Каждого КК Из Кнопки Цикл
			Если ОтчетыВКнопке[КК.Имя] = Строка Тогда
				КК.Пометка = Истина;
				Возврат Истина;
			КонецЕсли;
			
			Если ОтметитьТекущуюСтрокуВМеню(Строка, КК) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
	Возврат Ложь;	
	
КонецФункции

Процедура ОчиститьРезультаты()
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Копия.Доступность = Ложь;
	ЭлементыФормы.РезультатТабДок.Очистить();
	
КонецПроцедуры

Процедура СкопироватьПараметрыСтроки(ИсходнаяСтрока, КонечнаяСрока)
	
	КонечнаяСрока.ИмяОтчета = ИсходнаяСтрока.ИмяОтчета;
	ХЗ = Новый ХранилищеЗначения(ИсходнаяСтрока.СхемаКомпоновкиДанных);
	КонечнаяСрока.СхемаКомпоновкиДанных = ХЗ.Получить();
	ХЗ = Новый ХранилищеЗначения(ИсходнаяСтрока.Настройки);
	КонечнаяСрока.Настройки = ХЗ.Получить();
	КонечнаяСрока.НастройкаДляЗагрузки = ИсходнаяСтрока.НастройкаДляЗагрузки;
	КонечнаяСрока.СохранятьНастройкиАвтоматически = ИсходнаяСтрока.СохранятьНастройкиАвтоматически;
	
КонецПроцедуры

Процедура СкопироватьДеревоОтчетов(ИсходноеДерево, НовоеДерево)

	НовоеДерево.Строки.Очистить();

	Если ИсходноеДерево.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого СтрокаДерева из ИсходноеДерево.Строки Цикл

		НоваяСтрока = НовоеДерево.Строки.Добавить();
		
        СкопироватьПараметрыСтроки(СтрокаДерева, НоваяСтрока);

		СкопироватьДеревоОтчетов(СтрокаДерева, НоваяСтрока);
		
	КонецЦикла;

КонецПроцедуры

Функция ТекущееВремяТ()
	Scr = Новый COMОбъект("MSScriptControl.ScriptControl");
	Scr.Language = "javascript";
	ВремяОтНачалаДня = Scr.eval("new Date().getTime()");
	Возврат ВремяОтНачалаДня;
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ

Процедура НовыйФайлОтчетов()

	Если СохранитьЗапросыВФайл(Истина) Тогда
		
		СоздатьНовыйФайлЗапросов();
		ПоказатьНастройки();
		
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьФайлОтчетов()

	Если СохранитьЗапросыВФайл(Истина) Тогда

		Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		
		Длг.ПолноеИмяФайла = ИмяФайлаОтчетов;
		Длг.Каталог = ИмяПути;
		Длг.Заголовок = НСтр("ru='Выберите файл со списком отчетов'");
		Длг.Фильтр = НСтр("ru='Файлы отчетов (*.dcf)|*.dcf|Все файлы (*.*)|*.*'");
		Длг.Расширение = "dcf";
		
		Если Длг.Выбрать() Тогда
			ИмяФайлаОтчетов = Длг.ПолноеИмяФайла;
			ИмяПути = Длг.Каталог;
			ЗагрузитьЗапросыИзФайла(Ложь);
			ОчиститьРезультаты();
			ТекущаяСтрока = НеОпределено;
			СохранитьИмяФайла();
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура Сохранить()

	СохранитьЗапросыВФайл();

КонецПроцедуры

Процедура СохранитьКак()

	СохранитьЗапросыВФайл(Ложь, Истина);

КонецПроцедуры

Процедура ПеренестиСтрокуДерева(Элемент)

	ФормаВыбораСтрокиДереваОтчетов = ПолучитьФорму("ФормаВыбораСтрокиДереваОтчетов", ЭтаФорма);
	ФормаВыбораСтрокиДереваОтчетов.ЗакрыватьПриВыборе = Истина;

	ФормаВыбораСтрокиДереваОтчетов.ДеревоОтчетов = ДеревоОтчетов;
	ФормаВыбораСтрокиДереваОтчетов.ТекущаяСтрокаВладельца = ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока;
	ФормаВыбораСтрокиДереваОтчетов.ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока;

	ФормаВыбораСтрокиДереваОтчетов.ОткрытьМодально();

КонецПроцедуры

Процедура СохранитьТекущиеНастройкиВСтроку()
	
	Если Не ОтработанаРасшифровка И ТекущаяСтрока.СохранятьНастройкиАвтоматически = Истина И 
		ТипЗнч(ТекущаяСтрока.Настройки) = Тип("ТаблицаЗначений") Тогда
		
			Для Каждого Тн ИЗ ТекущаяСтрока.Настройки Цикл
				
				Если ПоследняяОткрытаяНастройка = Тн.Имя ИЛИ 
					(ПоследняяОткрытаяНастройка = Неопределено И Тн.Имя = ТекущаяСтрока.НастройкаДляЗагрузки) Тогда
					
					Тн.Настройки = Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);

					Если ПоследняяОткрытаяНастройка <> Неопределено Тогда
						ТекущаяСтрока.НастройкаДляЗагрузки = ПоследняяОткрытаяНастройка;
					КонецЕсли;

					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельРеультатаНазад(Кнопка)
	
    Количество = История.Количество();
	
	Если Количество > 1 Тогда
		
		ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = История[Количество - 2]["Отчет"];
		КомпоновщикНастроек.ЗагрузитьНастройки(История[Количество - 2]["Настройки"].Получить());
		ЭлементИстории = История[Количество - 1];
        ИсторияВперед.Добавить(История[Количество - 1]);
		История.Удалить(Количество - 1);
		ВыполнитьОтчет();
		ЭлементыФормы.РезультатТабДок.ТекущаяОбласть = ЭлементыФормы.РезультатТабДок.Область(ЭлементИстории.ПозицияВерх, 
			ЭлементИстории.ПозицияЛево, ЭлементИстории.ПозицияНиз, ЭлементИстории.ПозицияПраво);
		ОбновитьКнопкиИстории();
		ОтработанаРасшифровка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельРеультатаВперед(Кнопка)
	
	Количество = ИсторияВперед.Количество();
	
	Если Количество > 0 Тогда
		
		ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = ИсторияВперед[Количество - 1]["Отчет"];
		КомпоновщикНастроек.ЗагрузитьНастройки(ИсторияВперед[Количество - 1]["Настройки"].Получить());
		ЭлементИстории = ИсторияВперед[Количество - 1];
		История.Добавить(ИсторияВперед[Количество - 1]);
		ИсторияВперед.Удалить(Количество - 1);
		ВыполнитьОтчет();
		ЭлементыФормы.РезультатТабДок.ТекущаяОбласть = ЭлементыФормы.РезультатТабДок.Область(ЭлементИстории.ПозицияВерх, 
			ЭлементИстории.ПозицияЛево, ЭлементИстории.ПозицияНиз, ЭлементИстории.ПозицияПраво);
		ОбновитьКнопкиИстории();
		ОтработанаРасшифровка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОтображатьНастройки(Кнопка)
	
	Если ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтображатьНастройки.Пометка Тогда
		СвернутьНастройки();
	Иначе
		ПоказатьНастройки();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиВТаблицу(Кнопка)
	
	СохранитьПозициюВРезультате();
	
	Если ВыполнитьОтчет() Тогда
	    ЗаписатьИсторию();
		ОбновитьКнопкиИстории();
	КонецЕсли;
	
	ОтработанаРасшифровка = Ложь;
	
КонецПроцедуры

Процедура КоманднаяПанельРеультатаКопия(Кнопка)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.Вывести(ЭлементыФормы.РезультатТабДок);
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.СохранятьСвойстваОтображения = Истина;
	ТабДок.Показать();
	
КонецПроцедуры

Процедура КоманднаяПанельРеультатаСохранитьНастройкиОтчета(Кнопка)
	
	Перем Настройки;
	Перем ФормаСохраненияНастроек;
	
	ФормаСохраненияНастроек = ПолучитьФорму("ФормаСохраненияНастроек");
	
	ФормаСохраненияНастроек.НаименованиеНастройки = ТекущаяСтрока.НастройкаДляЗагрузки;
	ФормаСохраненияНастроек.СохранятьАвтоматически = ТекущаяСтрока.СохранятьНастройкиАвтоматически;
	
	Если ТекущаяСтрока.Настройки <> Неопределено Тогда
		
		Если ТипЗнч(ТекущаяСтрока.Настройки) = Тип("ТаблицаЗначений") Тогда
			
			Для Каждого Тн ИЗ ТекущаяСтрока.Настройки Цикл
				
				ПоУмолчанию = Ложь;
				
				Если ТекущаяСтрока.НастройкаДляЗагрузки = Тн.Имя Тогда
					
					ПоУмолчанию = Истина;
					
				КонецЕсли;
				
				ФормаСохраненияНастроек.Настройки.Добавить(, Тн.Имя, ПоУмолчанию);
				
				Если ПоследняяОткрытаяНастройка = Тн.Имя Или 
					(ПоУмолчанию = Истина И ПоследняяОткрытаяНастройка = Неопределено) Тогда
					
					ФормаСохраненияНастроек.ЭлементыФормы.Настройки.ТекущаяСтрока = 
						ФормаСохраненияНастроек.Настройки[ФормаСохраненияНастроек.Настройки.Количество() - 1];
						
				КонецЕсли;
					
			КонецЦикла;
				
		КонецЕсли;
			
	КонецЕсли;
	
	Если ФормаСохраненияНастроек.Настройки.Количество() = 0 Тогда
		
		ФормаСохраненияНастроек.НаименованиеНастройки = НСтр("ru='Основная'");
		
	КонецЕсли;

	Если ФормаСохраненияНастроек.ОткрытьМодально() = Истина Тогда
		
		ПоследняяОткрытаяНастройка = ФормаСохраненияНастроек.НаименованиеНастройки;
		
		Настройки = Новый ТаблицаЗначений;
		Настройки.Колонки.Добавить("Имя");
		Настройки.Колонки.Добавить("Настройки");
		
		ТекущиеНастройкиНайдены = Ложь;

		Если ТипЗнч(ТекущаяСтрока.Настройки) = Тип("ТаблицаЗначений") Тогда
			
			Для Каждого Тн ИЗ ТекущаяСтрока.Настройки Цикл
				
				Найдено = Ложь;
				ИспользоватьПриОткрытии = Ложь;
				
				Для Каждого НФ Из ФормаСохраненияНастроек.Настройки Цикл
					
					Если НФ.Представление = Тн.Имя Тогда
						
						ИспользоватьПриОткрытии = НФ.Пометка;
						Найдено = Истина;
						Прервать;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если Найдено Тогда
					
					ДС = Настройки.Добавить();
					ДС.Имя = Тн.Имя;

					Если ФормаСохраненияНастроек.НаименованиеНастройки = Тн.Имя Тогда
						
						ТекущиеНастройкиНайдены = Истина;
						
						ДС.Настройки = Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);

						Если ФормаСохраненияНастроек.ИспользоватьПриОткрытии Тогда
							
							ТекущаяСтрока.НастройкаДляЗагрузки = ФормаСохраненияНастроек.НаименованиеНастройки;
							
						КонецЕсли;
						
					Иначе
						
						ДС.Настройки = Тн.Настройки;

						Если ИспользоватьПриОткрытии Тогда
							
							ТекущаяСтрока.НастройкаДляЗагрузки = Тн.Имя;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Не ТекущиеНастройкиНайдены Тогда
			
			ДС = Настройки.Добавить();
			ДС.Имя = ФормаСохраненияНастроек.НаименованиеНастройки;
			
			Если ФормаСохраненияНастроек.ИспользоватьПриОткрытии Тогда
				
				ТекущаяСтрока.НастройкаДляЗагрузки = ФормаСохраненияНастроек.НаименованиеНастройки;
				
			КонецЕсли;

			ДС.Настройки = Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);

		КонецЕсли;
		
		ТекущаяСтрока.Настройки = Настройки;
		ТекущаяСтрока.СохранятьНастройкиАвтоматически = ФормаСохраненияНастроек.СохранятьАвтоматически;
		Модифицированность = Истина;
		
		Если Не ТекущиеНастройкиНайдены Тогда
			
			ЗагрузитьНастройкиОтчетаВМеню();
			ЗагрузитьОтчетыВМеню();
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьОтчетИзМеню(Кнопка)
	
	Перем ИмяОтчета;
	
	Кнопки = ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отчет.Кнопки;
	ОчиститьТекущуюСтрокуВМеню(Кнопки);
	Кнопка.Пометка = Истина;
	
	ИмяОтчета = ОтчетНастройкиВКнопке[Кнопка.Имя];
	
	Если ИмяОтчета <> Неопределено Тогда
		
		СтрокаОтчета = НайтиСтрокуПоПути(ИмяОтчета);
		
	Иначе
		
		СтрокаОтчета = НайтиСтрокуПоПути(ОтчетыВКнопке[Кнопка.Имя]);
		
	КонецЕсли;
	
	Если СтрокаОтчета <> Неопределено Тогда
		
		ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = СтрокаОтчета;
		СохранитьПозициюВРезультате();
		
		Если ИмяОтчета <> Неопределено Тогда
			
			// Загрузим настройку по имени
			ИмяНастройки = НастройкиОтчетаВКнопке[Кнопка.Имя];
			
			Для Каждого Тн ИЗ ТекущаяСтрока.Настройки Цикл
				
				Если ИмяНастройки = Тн.Имя Тогда
					
					ПоследняяОткрытаяНастройка = Тн.Имя;
					ЗагрузитьНастройки(Тн);
					
					Для Каждого НК Из ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ЗагрузитьНастройкиОтчета.Кнопки Цикл
						
						НК.Пометка = НК.Текст = ИмяНастройки;
						
					КонецЦикла;
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ВыполнитьОтчет() Тогда
			
			ЗаписатьИсторию();
			ОбновитьКнопкиИстории();
			
		КонецЕсли;
		
		ОтработанаРасшифровка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьНастройкиОтчета(Кнопка)
	
	Перем Кнопки;

	Кнопки = ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ЗагрузитьНастройкиОтчета.Кнопки;
	
	Для Каждого КК Из Кнопки Цикл
		
		КК.Пометка = Ложь;
		
	КонецЦикла;
	
	Кнопка.Пометка = Истина;
	ИмяНастройки = НастройкиВКнопке[Сред(Кнопка.Имя, 2)];
	
	Если ИмяНастройки = "" Тогда
		// Настройки по умолчанию
		ОтработанаРасшифровка = Истина;
		
		Если ТекущаяСтрока.СхемаКомпоновкиДанных <> Неопределено Тогда
			
			КомпоновщикНастроек.ЗагрузитьНастройки(ТекущаяСтрока.СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
			ОтработанаРасшифровка = Истина;
			
		КонецЕсли;
		
	Иначе
	
		Для Каждого Тн ИЗ ТекущаяСтрока.Настройки Цикл
			
			Если ИмяНастройки = Тн.Имя Тогда
				
				ПоследняяОткрытаяНастройка = Тн.Имя;
				ЗагрузитьНастройки(Тн);
				СохранитьПозициюВРезультате();
				
				Если ВыполнитьОтчет() Тогда
					
					ЗаписатьИсторию();
					ОбновитьКнопкиИстории();
					
				КонецЕсли;
				
				ОтработанаРасшифровка = Ложь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗагрузитьОтчетыВМеню();
	
КонецПроцедуры

Процедура ОткрытьУровень(Кнопка)
	
	Уровень = Число(Сред(Кнопка.Имя, 2)) - 1;
	
	У = ЭлементыФормы.РезультатТабДок.КоличествоУровнейГруппировокСтрок() - 1;
	
	Пока у > Уровень Цикл
		
		ЭлементыФормы.РезультатТабДок.ПоказатьУровеньГруппировокСтрок(у);
		у = у - 1;
		
	КонецЦикла;

	ЭлементыФормы.РезультатТабДок.ПоказатьУровеньГруппировокСтрок(Уровень);
	
КонецПроцедуры

Процедура КонтМенюПереименовать(Кнопка)
	
	Если ТекущаяСтрока = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Не ВвестиСтроку(ТекущаяСтрока.ИмяОтчета, НСтр("ru='Имя отчета'")) Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыВыводитьТекстЗапроса(Кнопка)
	
	Если ВыводитьТекстЗапроса Тогда
	
		ВыводитьТекстЗапроса = Ложь;
		ЭлементыФормы.ПанельРезультатов.ТекущаяСтраница=ЭлементыФормы.ПанельРезультатов.Страницы.Результат;
		ЭлементыФормы.ПанельРезультатов.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
	
	Иначе
	
		ВыводитьТекстЗапроса = Истина;
		ЭлементыФормы.ПанельРезультатов.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
	
	КонецЕсли; 
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВыводитьТекстЗапроса.Пометка = ВыводитьТекстЗапроса;
		
КонецПроцедуры

Процедура КоманднаяПанельФормыВыводитьВремяВыполнения(Кнопка)
	
	Если ВыводитьВремяВыполнения Тогда
	
		ВыводитьВремяВыполнения = Ложь;
	
	Иначе
	
		ВыводитьВремяВыполнения = Истина;
	
	КонецЕсли; 
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВыводитьВремяВыполнения.Пометка = ВыводитьВремяВыполнения;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура ДеревоОтчетовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СохранитьПозициюВРезультате();
	
	Если ВыполнитьОтчет() Тогда
		
	    ЗаписатьИсторию();
		ОбновитьКнопкиИстории();
		
	КонецЕсли;
	
	ОтработанаРасшифровка = Ложь;

КонецПроцедуры

Процедура ДеревоОтчетовПриАктивизацииСтроки(Элемент)
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		СохранитьТекущиеНастройкиВСтроку();
		
	КонецЕсли;
		
	ТекущаяСтрока = ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока;

	Если ТекущаяСтрока <> НеОпределено Тогда
		
        ИнициализироватьКомпоновщикНастроек(ТекущаяСтрока);
		ОтметитьТекущуюСтрокуВМеню();

		Если ТекущаяСтрока.СхемаКомпоновкиДанных <> Неопределено Тогда
			
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВывестиВТаблицу.Доступность = Истина;
			
		Иначе
			
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВывестиВТаблицу.Доступность = Ложь;
			
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВывестиВТаблицу.Доступность = Ложь;
		
	КонецЕсли;
	
	ЗагрузитьНастройкиОтчетаВМеню();
	
	ОтработанаРасшифровка = Ложь;
	
КонецПроцедуры

Процедура ДеревоОтчетовПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = НеОпределено;
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура ДеревоОтчетовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		РедактируемаяКонструкторомСтрока = ТекущаяСтрока;
		КонструкторСхемы = Новый КонструкторСхемыКомпоновкиДанных;
		Если РедактируемаяКонструкторомСтрока.СхемаКомпоновкиДанных <> Неопределено Тогда
			
			КонструкторСхемы.УстановитьСхему(РедактируемаяКонструкторомСтрока.СхемаКомпоновкиДанных);

		КонецЕсли;
		
		КонструкторСхемы.Редактировать(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоОтчетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	Перем ИмяОтчета;
	
	ИмяОтчета = "";
	
	Отказ = Истина;
	ИдетДобавление = Истина;

	Если Копирование Тогда
		
		ИмяОтчета = Элемент.ТекущаяСтрока.ИмяОтчета;
		
	Иначе
		
		ИмяОтчета = НСтр("ru='Отчет'");
		
	КонецЕсли;
	
	Если Не ВвестиСтроку(ИмяОтчета, НСтр("ru='Имя отчета'")) Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	Если Родитель <> Неопределено Тогда
			
		НоваяСтрока = Родитель.Строки.Добавить();
			
	Иначе
			
		НоваяСтрока = ДеревоОтчетов.Строки.Добавить();
			
	КонецЕсли;
	
	НоваяСтрока.ИмяОтчета = ИмяОтчета;

	Если Копирование И ТекущаяСтрока <> Неопределено Тогда
		
		ХЗ = Новый ХранилищеЗначения(ТекущаяСтрока.СхемаКомпоновкиДанных);
		НоваяСтрока.СхемаКомпоновкиДанных = ХЗ.Получить();
		НоваяСтрока.НастройкаДляЗагрузки = ТекущаяСтрока.НастройкаДляЗагрузки;
			
	Иначе
			
		НоваяСтрока.СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;

	КонецЕсли;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		РедактируемаяКонструкторомСтрока = НоваяСтрока;
		КонструкторСхемы = Новый КонструкторСхемыКомпоновкиДанных;
		КонструкторСхемы.УстановитьСхему(РедактируемаяКонструкторомСтрока.СхемаКомпоновкиДанных);
		КонструкторСхемы.Редактировать(ЭтаФорма);
		
	КонецЕсли;
	
    Элемент.ТекущаяСтрока = НоваяСтрока;
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура ДеревоОтчетовПослеУдаления(Элемент)
	
	ЗагрузитьОтчетыВМеню();
	
КонецПроцедуры

Процедура РезультатТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанныхКонсоли = ПолучитьСхемуКомпоновкиДанных();
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровкиКонсоли, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанныхКонсоли));
	НастройкиРасшифровки = ОбработкаРасшифровки.Выполнить(Расшифровка);
	
	Если НастройкиРасшифровки <> Неопределено Тогда
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиРасшифровки);
		Если ВыполнитьОтчет() Тогда
		    ЗаписатьИсторию();
			ОбновитьКнопкиИстории();
		КонецЕсли;
		
		ОтработанаРасшифровка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	// Попытаемся загрузить последний открывавшийся файл отчетов
	ВосстановитьИмяФайла();
	
	Если ПустаяСтрока(ИмяФайлаОтчетов) Тогда
		
		СоздатьНовыйФайлЗапросов();
		
	Иначе
		
		Если Не ЗагрузитьЗапросыИзФайла(Истина) Тогда
			
			СоздатьНовыйФайлЗапросов();
			
		Иначе
			
			ТекущаяСтрока = НеОпределено;
			
		КонецЕсли;
		
	КонецЕсли;

	ВосстановитьТекущийЗапрос();

	ОбновитьКнопкиИстории();
	
	ЭлементыФормы.ПанельРезультатов.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если Источник = КонструкторСхемы Тогда
		
		РедактируемаяКонструкторомСтрока.СхемаКомпоновкиДанных = ЗначениеВыбора;
		
		Модифицированность = Истина;
		ЗагрузитьОтчетыВМеню();
		
		КонструкторСхемы = Неопределено;
		
		Если РедактируемаяКонструкторомСтрока = ТекущаяСтрока Тогда
			
			ИнициализироватьИсточникКомпоновщикаНастроек(ТекущаяСтрока);
			
			Если ИдетДобавление ИЛИ Вопрос(НСТР("ru='Загрузить стандартные настройки?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
				КомпоновщикНастроек.ЗагрузитьНастройки(РедактируемаяКонструкторомСтрока.СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
				
			КонецЕсли;
			
			ЗагрузитьНастройкиОтчетаВМеню();
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ВывестиВТаблицу.Доступность = Истина;
			
		КонецЕсли;
			
		РедактируемаяКонструкторомСтрока = Неопределено;
		
		ИдетДобавление = Ложь;
		
	ИначеЕсли Источник = ФормаВыбораСтрокиДереваОтчетов Тогда
		
		НоваяСтрока = ЗначениеВыбора.Строки.Добавить();
		СкопироватьПараметрыСтроки(ТекущаяСтрока, НоваяСтрока);

		СкопироватьДеревоОтчетов(ТекущаяСтрока, НоваяСтрока);

		РодительТекущейСтроки = ?(ТекущаяСтрока.Родитель = НеОпределено, ДеревоОтчетов, ТекущаяСтрока.Родитель);
		РодительТекущейСтроки.Строки.Удалить(РодительТекущейСтроки.Строки.Индекс(ТекущаяСтрока));
		ТекущаяСтрока = НеОпределено;

		ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = НоваяСтрока;

		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ СохранитьЗапросыВФайл(Истина) Тогда
		
        СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		
	Иначе
		
		СохранитьТекущийЗапрос();
		ПоказатьНастройки();
		
	КонецЕсли;

КонецПроцедуры

// Начальные установки
ИмяФайлаОтчетов = "";
ИмяПути = "";

ЗаголовокФормы = Заголовок;

ТекущаяСтрока = НеОпределено;
ИдетДобавление = Ложь;

История = Новый Массив;
ИсторияВперед = Новый Массив;

ОтработанаРасшифровка = Ложь;

ВыводитьТекстЗапроса = Ложь;
ВыводитьВремяВыполнения = Ложь;

